name: Munchi Merchant Api Dev Build and Push
on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Automation deployment for Munchi Merchant Api Dev'
        required: false
        default: 'Manual trigger'
env:
  REGISTRY: ${{ secrets.GCP_REGISTRY }}
  REPOSITORY: ${{ secrets.GCP_REPOSITORY }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  IMAGE_NAME: munchi-merchant-api
  SERVICE_NAME: munchi-merchant-dev-api  # If this is different from the image name
  REGION: ${{ secrets.GCP_REGION }}
jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3 
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        npm install -g npm@8.19.4
        npm install
    - name: Set up Google Cloud SDK
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    - name: Authenticate to Google Cloud
      run: |
       echo '${{ env.GCP_SA_KEY }}' > gcloud-service-key.json
       gcloud auth activate-service-account --key-file=gcloud-service-key.json
    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker ${{ env.REGISTRY }}
    - name: Build and push Docker image
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"
        chmod +x ./scripts/build_gcloud_image
        chmod +x ./scripts/push_gcloud_image
        ./scripts/build_gcloud_image
        ./scripts/push_gcloud_image
    - name: Deploy new revision to Cloud Run
      run: |
        FULL_IMAGE_NAME="${REGISTRY}/${PROJECT_ID}/${REPOSITORY}/${IMAGE_NAME}:latest"
        echo "Deploying image: $FULL_IMAGE_NAME"
        gcloud run deploy "${SERVICE_NAME}" \
          --image "${FULL_IMAGE_NAME}" \
          --platform managed \
          --region "${REGION}" \
          --project "${PROJECT_ID}"
    - name: Print completion message
      run: echo "Build and push completed for ${{ env.IMAGE_NAME }}"